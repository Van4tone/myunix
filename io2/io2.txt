Mon Aug 10 20:29:23 PDT 2020


标准IO库 缓冲区分配以优化长度执行I/O

文件IO的操作是围绕文件的
标准IO的操作是围绕流进行的

用标准iO库打开或者创建一个文件时，已经使一个流与一个文件相关联了。

字节定向和宽定向

freopen 清除一个流的定向
fwide设置流的定向

int fwide(FILE *fp, int mode);
mode 为负数 fwide 将流制定为字节定向
mode 为正数 fwide 将流制定为宽定向
mode 为0    fwide 不设置流的定向

标准输入
标准输出
标准出错

缓冲
全缓冲：在填满标准IO缓冲区后才执行实际的IO操作。驻留在磁盘上的文件通常是标准IO库实现的全缓冲。
在一个流上执行第一次IO操作时，相关标准IO函数通常调用malloc获取使用的缓冲区。

冲洗（flush）缓冲区可由标准IO自动冲洗，例如当一个缓冲区被填满时。标准IO库中flush就是将缓冲区的数据写到磁盘上。
int fflush(FILE *fp);


行缓冲： 当输入和输出遇到换行符时，标准IO库执行IO操作。例如终端上的输入输出。

不缓冲： 标准IO库不对字符进行缓冲存储。


打开流
fopen
freopen
fdopen

















































open
write
read
lseek
close

不带缓冲：每个read write 都是调用系统内核中的一个系统调用。

文件描述符
0 标准输入
1 标注输出
2 标准出错输出



int open(const char *pathname, int flag, mode_t mode);

O_NONBLOCK 设置为非阻塞模式


clos函数
一个进程终止时，内核自动关闭它所有打开的文件。
可以使用exit函数不显示的用close关闭文件。



off_t lseek(int fd, off_t offset, int whence);


文件共享


原子操作：指的时由多步操作组成的操作，要么执行完所有步骤，要么一步也不执行。



dup dup2

复制一个现存的文件描述符。

dup(fd)等效于 fcntl(fd,F_DUPFD,0)

dup2(fd,newfd)等效于 close(newfd) fcntl(fd,F_DUPFD,newfd)

dup2是一个原子操作


传统的unix系统内部有 buffer cache 和 page cache
一般情况下数据写到磁盘里，是先将数据写到buffer里，等到buffer满了或者内核需要重用这个buffer，
此时才将buffer里的数据写到磁盘里。称为延时写
延时写减少了磁盘的读写次数，但是降低了文件内容的跟新速度。

sync  将修改过的buffer排入写队列，立即返回，不等待写操作结束。
fsync  只对由文件描述符指定的单一文件有效，等待磁盘写操作结束。
fdatasync 类似于fsync,但他只影响文件的数据部分。fsync还会更新文件的属性。



fcntl
可改变已经打开的文件性质

int fcntl(int fd, int cmd, int arg);

cmd的功能
复制一个现有的文件描述符 F_DUPFD
获得/设置文件描述符标记 F_GETFD F_SETFD
获得/设置文件状态标志 F_GETFL F_SETFL
获得/设置异步I/O所有权 F_GETOWN F_SETOWN
获得/设置记录锁 F_GETLK F_SETLK F_SETLKW














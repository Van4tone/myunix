Thu Aug 20 09:32:37 CST 2020

问题点：
		1. main函数如何调用
		2. 命令行参数如何传给执行程序
		3. 典型的存储器布局
		4. 如何分配另外的存储空间
		5. 进程如何使用环境变量
		6. 各种不同的进程终止方式
		7. longjmp和setjmp函数几他们与栈的交互作用
		8. 进程的资源限制
 
main 函数
	int main(int argc, char *argv[]);
	argc是命令行参数的数目，argv是指向参数的各个指针所构成的数组。
	内核通过调用exec函数去指向c程序，在调用main之前先调用一个特殊的启动例程。
	可执行程序文件将此启动例程指定为程序的启动地址。
	启动例程从内核取得命令行参数和环境变量值。

进程终止
	共8种方式终止进程
	
	其中5种方式为正常终止
	1. 从main返回
	2. 调用exit
	3. 调用_exit或_Exit
	4. 最后一个线程从其启动例程返回
	5. 最后一个线程调用pthread_exit
	
	3种异常终止
	1.调用abort
	2.接到一个信号并终止
	3.最后一个线程对取消请求作出响应。

	启动例程使得main函数返回立即调用exit函数。
	exit(main(argc,argv));
	
	exit函数
	_exit _Exit 这2个函数是立即进入内核的。
	exit函数先执行一下清理程序（调用执行各终止处理程序，关闭所有标准IO流），然后在进入内核。
	void exit(int status);
	void _Exit(int status);
	void _exit(int status);

	exit函数执行一个标准IO库的清理关闭动作：为所有打开流调用fclose函数，这会将所有缓冲的输出数据冲洗掉（写到文件上）。

	终止状态
	a. 调用这些函数时不带终止状态
	b. main函数执行了一个无返回值得return语句
	c. main函数没有声明返回值类型为整形
	这三种情况导致终止态是未定义的。
	若main的返回值是整形，且main执行到最后一局返回，则该进程终止态是0

	main函数中 exit(0) 等价于 return（0）

	atexit函数
	一个进程可以登记32个函数，这些函数都由exit自动调用。
	这些函数为终止处理程序，并调用atexit函数来登记这些函数。

	int atexit(void (*func)(void));
	atexit函数不需要传参和返回值。
	exit调用这些函数的顺序与atexit登记这些函数的顺序相反。
	同一函数被登记多次，也会被调用多次。



